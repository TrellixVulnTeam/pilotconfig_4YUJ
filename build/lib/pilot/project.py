from .Sbc import Sbc

def arguments(parser):
  # parser.add_argument('--terminal', '-t', action='store_true', help='forces the terminal version instead of GUI')
  pass


def main(args):
  print('This will create a new firmware project.')
  project_name = input('Project Name: ')

  print("Project generated:")
  print( """{}
            ├─ src/
            │  ├─ program.st /* IEC 61131-3 code */
            │  └─ *.c, *.h   /* custom C code compiled into firmware image */
            ├─ config.json   /* firmware configuration (memory mapping, module configuration, etc.) */
            └─ basefw/       /* firmware base code folder, generated by 'make basefw' */""".format(project_name))

